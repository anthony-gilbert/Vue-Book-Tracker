apiVersion: apps/v1
kind: Deployment
metadata:
  name: github-runner
  namespace: github-runners
  labels:
    app: github-runner
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 1
  selector:
    matchLabels:
      app: github-runner
  template:
    metadata:
      labels:
        app: github-runner
    spec:
      serviceAccountName: github-runner
      securityContext:
        runAsNonRoot: false
        runAsUser: 0
      containers:
      - name: runner
        image: summerwind/actions-runner:v2.311.0-ubuntu-22.04
        imagePullPolicy: Always
        env:
        - name: RUNNER_NAME
          value: "k8s-vue-book-tracker-runner"
        - name: RUNNER_REPO
          value: "anthony-gilbert/Vue-Book-Tracker"
        - name: RUNNER_TOKEN
          valueFrom:
            secretKeyRef:
              name: github-runner-token
              key: token
        - name: RUNNER_WORKDIR
          value: "/tmp/runner"
        - name: DISABLE_RUNNER_UPDATE
          value: "true"
        - name: RUNNER_LABELS
          value: "kubernetes,self-hosted,vue-book-tracker,linux,x64"
        - name: RUNNER_ALLOW_RUNASROOT
          value: "1"
        - name: DEBIAN_FRONTEND
          value: noninteractive
        - name: RUNNER_REPLACE_EXISTING
          value: "true"
        - name: RUNNER_EPHEMERAL
          value: "false"
        - name: DOCKER_ENABLED
          value: "false"
        volumeMounts:
        - name: runner-workdir
          mountPath: /tmp/runner
        - name: runner-home
          mountPath: /home/runner
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          exec:
            command:
            - /bin/bash
            - -c
            - |
              if ps aux | grep -v grep | grep "Runner.Listener" > /dev/null; then
                exit 0
              else
                echo "Runner.Listener not found"
                exit 1
              fi
          initialDelaySeconds: 120
          periodSeconds: 60
          timeoutSeconds: 30
          failureThreshold: 3
        readinessProbe:
          exec:
            command:
            - /bin/bash
            - -c
            - |
              if ps aux | grep -v grep | grep "Runner.Listener" > /dev/null; then
                exit 0
              else
                echo "Runner not ready"
                exit 1
              fi
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 15
          failureThreshold: 5
        lifecycle:
          preStop:
            exec:
              command:
              - /bin/bash
              - -c
              - |
                echo "Gracefully shutting down runner..."
                if [ -f "/tmp/runner/config.sh" ]; then
                  cd /tmp/runner && ./config.sh remove --unattended --token $RUNNER_TOKEN
                fi
      volumes:
      - name: runner-workdir
        emptyDir:
          sizeLimit: "2Gi"
      - name: runner-home
        emptyDir:
          sizeLimit: "1Gi"
      restartPolicy: Always
      terminationGracePeriodSeconds: 60
      nodeSelector:
        kubernetes.io/arch: amd64
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: github-runner
  namespace: github-runners
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: github-runners
  name: github-runner
rules:
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["get", "list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: github-runner
  namespace: github-runners
subjects:
- kind: ServiceAccount
  name: github-runner
  namespace: github-runners
roleRef:
  kind: Role
  name: github-runner
  apiGroup: rbac.authorization.k8s.io
